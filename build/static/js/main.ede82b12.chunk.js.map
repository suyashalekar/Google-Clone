{"version":3,"sources":["contextApi/StateProvider.js","contextApi/reducer.js","components/Search.jsx","components/Home.jsx","Key.js","useGoogleSearch.js","components/SearchPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionType","state","action","console","log","type","term","Search","hiddenButtons","dispatch","useState","input","setInput","history","useHistory","google_search","e","preventDefault","push","className","onClick","onChange","target","Button","variant","Home","to","Avatar","src","alt","API_KEY","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","srcset","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","displayLink","title","snippet","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ede82b12.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n\r\n// import { useContext, createContext, useReducer } from 'react';\r\n\r\n// export const StateContext = createContext();\r\n\r\n// export const StateProvider = ({ reducer, initialState, children }) => (\r\n//   <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n//     {children}\r\n//   </StateContext.Provider>\r\n// );\r\n\r\n// export const useStateValue = () => useContext(StateContext);\r\n","export const initialState = {\r\n  term: null,\r\n};\r\n\r\nexport const actionType = {\r\n  SET_SEARCH_TERM: 'SET_SEARCH_TERM',\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case actionType.SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.term,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport '../Search.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStateValue } from '../contextApi/StateProvider';\r\nimport { actionType } from '../contextApi/reducer';\r\n\r\nfunction Search({ hiddenButtons }) {\r\n  const [{}, dispatch] = useStateValue();\r\n  const [input, setInput] = useState('');\r\n  const history = useHistory();\r\n\r\n  const google_search = (e) => {\r\n    e.preventDefault();\r\n    console.log('>>>>>>>>>>>>>>>search icon');\r\n\r\n    dispatch({\r\n      type: actionType.SET_SEARCH_TERM,\r\n      term: input,\r\n    });\r\n\r\n    history.push('/search');\r\n  };\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__input\">\r\n        <SearchIcon onClick={google_search} className=\"search__inputIcon\" />\r\n        <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} />\r\n        <MicIcon className=\"search__MicIcon\" />\r\n      </div>\r\n      {hiddenButtons ? (\r\n        <div className=\"search__buttonContainer\">\r\n          <Button type=\"submit\" onClick={google_search} variant=\"outlined\" className=\"button\">\r\n            Google Search\r\n          </Button>\r\n          <Button variant=\"outlined\" className=\"button\">\r\n            I'm Feeling Lucky\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"search__buttonContainer hide\">\r\n          <Button type=\"submit\" onClick={google_search} variant=\"outlined\" className=\"button\">\r\n            Google Search\r\n          </Button>\r\n          <Button variant=\"outlined\" className=\"button\">\r\n            I'm Feeling Lucky\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Home.css';\r\nimport Search from './Search';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__header\">\r\n        <div className=\"home__headerLinksLeft\">\r\n          <Link to=\"#\" className=\"link\">\r\n            About\r\n          </Link>\r\n\r\n          <Link to=\"#\" className=\"link\">\r\n            Store\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"home__headerLinksRight\">\r\n          <Link to=\"#\" className=\"link\">\r\n            Gmail\r\n          </Link>\r\n\r\n          <Link to=\"#\" className=\"link\">\r\n            Image\r\n          </Link>\r\n\r\n          <AppsIcon className=\"icons\" />\r\n          <Avatar className=\"icons\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"home__body\">\r\n        <img\r\n          src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"home__inputContainer\">\r\n          <Search hiddenButtons />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export const API_KEY = 'AIzaSyBuF4bsmiA1e_OEG8bo6_oISnAR8LXbQDk';\r\nexport const CONTEXT_KEY = '9315428aefc796032';\r\n// export default API_KEY;\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { API_KEY, CONTEXT_KEY } from './Key';\r\n\r\nconst useGoogleSearch = (term) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  console.log('>>>>>>>>>> term', term);\r\n  console.log('>>>>>>>>>> API', API_KEY);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\r\n        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setData(result);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [term]);\r\n\r\n  return { data };\r\n};\r\n\r\nexport default useGoogleSearch;\r\n\r\n//const CONTEXT_KEY = '304991159e51fb4ae';\r\n\r\n//GET https://www.googleapis.com/customsearch/v1?key=INSERT_YOUR_API_KEY&cx=017576662512468239146:omuauf_lfve&q=lectures\r\n\r\n//https://www.googleapis.com/customsearch/v1?key=AIzaSyBuF4bsmiA1e_OEG8bo6_oISnAR8LXbQDk&cx=304991159e51fb4ae&q=learn\r\n\r\n// fetch(`GET https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`)\r\n\r\n// function useGoogleSearch(term) {\r\n//    const [data, setData] = useState(null);\r\n\r\n//    console.log('>>>>>>>>>> term', term);\r\n//    console.log('>>>>>>>>>> API', API_KEY);\r\n//    useEffect(() => {\r\n//      const fetchData = async () => {\r\n//        fetch(\r\n//          `GET https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n//        )\r\n//          .then((response) => response.json())\r\n//          .then((result) => {\r\n//            setData(result);\r\n//            console.log('>>>>>>>>>>result', result);\r\n//          });\r\n//      };\r\n//      fetchData();\r\n//    }, [term]);\r\n//    return { data };\r\n//  }\r\n\r\n// useEffect(() => {\r\n//    try {\r\n//      const fetchData = axios.get(\r\n//        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n//\r\n//      );\r\n//      if (fetchData) {\r\n//        console.log(fetchData);\r\n//      }\r\n//    } catch (e) {\r\n//      console.log(e);\r\n//    }\r\n//  }, [term]);\r\n\r\n//  return { data };\r\n// };\r\n","import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { useStateValue } from '../contextApi/StateProvider';\r\nimport Response from '../response';\r\nimport '../SearchPage.css';\r\nimport useGoogleSearch from '../useGoogleSearch';\r\nimport Search from './Search';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n\r\nfunction SearchPage() {\r\n  const [{ term }, dispatch] = useStateValue();\r\n  // live API\r\n  const { data } = useGoogleSearch(term);\r\n\r\n  // const data = Response;\r\n  console.log('>>>>>>>>>> data', data);\r\n  return (\r\n    <div className=\"searchPage\">\r\n      <div className=\"searchPage__header\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"searchPage__logo\"\r\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_92x30dp.png\"\r\n            alt=\"google.png\"\r\n            srcset=\"\"\r\n          />\r\n        </Link>\r\n        <div className=\"searchPage__searchBody\">\r\n          <Search />\r\n          {/* <div className=\"searchPage__options\">\r\n            <div className=\"searchPage__options-left\">\r\n              <div className=\"searchPage__option\">\r\n                <SearchIcon />\r\n                <Link to=\"/all\">All</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"searchPage__options-right\"></div>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n\r\n      {term && (\r\n        <div className=\"searchPage__results\">\r\n          <p className=\"searchPage__resultsCount\">\r\n            About {data?.searchInformation.formattedTotalResults} result (\r\n            {data?.searchInformation.formattedSearchTime} second) for {term}\r\n          </p>\r\n\r\n          {data?.items.map((item) => (\r\n            <div className=\"searchPage__result\">\r\n              <a className=\"searchPage__resultLink\" href={item.link}>\r\n                {item.displayLink}\r\n              </a>\r\n              <a className=\"searchPage__resultsTitle\" href={item.link}>\r\n                <h3> {item.title}</h3>\r\n              </a>\r\n              <p className=\"searchPage__resultsSnippet\">{item.snippet}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import './App.css';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport SearchPage from './components/SearchPage';\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/search\">\n            <SearchPage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './contextApi/StateProvider.js';\nimport reducer, { initialState } from './contextApi/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//AIzaSyBuF4bsmiA1e_OEG8bo6_oISnAR8LXbQDk\n"],"sourceRoot":""}